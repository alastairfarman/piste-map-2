{"version":3,"sources":["components/useZoomLevel.js","components/Model.js","components/ResortInfo.js","components/HourlyForecast.js","components/LiftStatus.js","components/ToggleButtons.js","liftData.js","App.jsx","index.js"],"names":["useZoomLevel","boundingBox","_useState","useState","_useState2","_slicedToArray","zoomLevel","setZoomLevel","camera","useThree","useFrame","closestPoint","THREE","clampPoint","position","distance","distanceTo","calculatedZoomLevel","Math","min","Model","_ref","toggleState","liftData","gltf","useLoader","GLTFLoader","setFromObject","scene","hasAncestorWithName","object","name","parent","_initializeMeshes","emptyObjects","liftObjects","runMeshes","traverse","child","isMesh","castShadow","receiveShadow","material","color","side","roughness","type","startsWith","push","initializeMeshes","towns","map","obj","split","slice","join","lifts","lift","skiLifts","find","status","console","log","useEffect","forEach","visible","runs","React","createElement","Fragment","resortLabels","Text","key","x","y","z","rotation","PI","fontSize","fillOpacity","font","toUpperCase","liftLabels","outlineWidth","outlineColor","toneMapped","Sphere","args","ResortInfo","resortData","resort","src","alt","style","width","padding","top","elevation","snowDepth","temperature","bottom","HourlyForecast","hourlyData","display","gridTemplateColumns","hour","index","time","description","windSpeed","LiftStatus","liftStatusData","open","closed","ooo","ToggleButtons","toggleRuns","toggleSatellite","toggleLiftLabels","toggleResortLabels","flexDirection","all","border","borderRadius","onClick","satellite","require","format","_require","utcToZonedTime","getLiftStatuses","now","Date","zonedTime","timeString","openCount","closedCount","oooCount","_i","_skiLifts","length","statusSummary","App","country","freshSnowfall","lastSnowfallDate","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setToggleState","className","zIndex","right","height","backgroundColor","fontFamily","alignItems","prevState","_objectSpread","Canvas","left","gl","antialias","toneMappingExposure","shadows","attach","Environment","files","background","MapControls","enableDamping","enableZoom","enableRotate","maxPolarAngle","minPolarAngle","minDistance","maxDistance","Suspense","fallback","Html","transform","animation","Stars","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7cd0c4bf.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\n\nconst useZoomLevel = (boundingBox) => {\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const { camera } = useThree();\n\n  useFrame(() => {\n    const closestPoint = new THREE.Vector3();\n    boundingBox.clampPoint(camera.position, closestPoint);\n    const distance = camera.position.distanceTo(closestPoint);\n    const calculatedZoomLevel = Math.min(distance / 10, 1);\n\n    if (zoomLevel !== calculatedZoomLevel) {\n      setZoomLevel(calculatedZoomLevel);\n    }\n  });\n\n  return zoomLevel;\n};\n\nexport default useZoomLevel;\n","import React, { useEffect, useState } from \"react\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Text, Sphere } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport useZoomLevel from \"./useZoomLevel\";\n\nexport default function Model({ toggleState, liftData }) {\n  const gltf = useLoader(GLTFLoader, \"./LaPlagne_crop.glb\");\n\n  const boundingBox = new THREE.Box3().setFromObject(gltf.scene);\n  const zoomLevel = useZoomLevel(boundingBox);\n\n  const hasAncestorWithName = (object, name) => {\n    while (object) {\n      if (object.name === name) return true;\n      object = object.parent;\n    }\n    return false;\n  };\n\n  const initializeMeshes = () => {\n    const emptyObjects = [];\n    const liftObjects = [];\n    const runMeshes = [];\n\n    gltf.scene.traverse((child) => {\n      if (child.isMesh) {\n        if (hasAncestorWithName(child, \"Topography\")) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n          child.material = new THREE.MeshStandardMaterial({\n            color: \"white\",\n            side: THREE.DoubleSide,\n            roughness: 0.3,\n          });\n        } else if (hasAncestorWithName(child, \"Buildings\")) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n        }\n      } else if (\n        (child.type === \"Group\" || child.type === \"Object3D\") &&\n        child.name.startsWith(\"Town_\")\n      ) {\n        emptyObjects.push(child);\n      }\n      if (child.name.startsWith(\"Lift_\")) {\n        child.castShadow = true;\n        liftObjects.push(child);\n      }\n      if (child.name.startsWith(\"Run_\")) {\n        runMeshes.push(child);\n      }\n    });\n\n    return { emptyObjects, liftObjects, runMeshes };\n  };\n\n  const { emptyObjects, liftObjects, runMeshes } = initializeMeshes();\n\n  const towns = emptyObjects.map((obj) => {\n    const name = obj.name\n      .split(\"_\")\n      .slice(1)\n      .join(\" \"); // Split the name and join with a space\n    return {\n      name: name,\n      position: obj.position,\n    };\n  });\n\n  const lifts = liftObjects.map((obj) => {\n    const name = obj.name\n      .split(\"_\")\n      .slice(1)\n      .join(\" \");\n    const lift = liftData().skiLifts.find((lift) => lift.name === name);\n    const status = lift ? lift.status : \"unknown\";\n    console.log(name, status);\n\n    return {\n      name: name,\n      position: obj.position,\n      status: status,\n    };\n  });\n\n  useEffect(() => {\n    runMeshes.forEach((child) => {\n      child.visible = toggleState.runs;\n    });\n  }, [toggleState.runs]);\n\n  return (\n    <>\n      <primitive object={gltf.scene} />\n      {toggleState.resortLabels &&\n        towns.map((obj) => (\n          <Text\n            key={obj.name}\n            position={[obj.position.x, obj.position.y + 1.2, obj.position.z]}\n            rotation={[Math.PI / 2, Math.PI, 0]}\n            color={\"black\"}\n            fontSize={0.4}\n            fillOpacity={zoomLevel}\n            font=\"./Rubik-Medium.ttf\"\n          >\n            {obj.name.toUpperCase()}\n          </Text>\n        ))}\n      {toggleState.liftLabels &&\n        lifts.map((obj) => (\n          <>\n            <Text\n              key={obj.name}\n              position={[obj.position.x, obj.position.y + 0.2, obj.position.z]}\n              rotation={[0, Math.PI, 0]}\n              color={\"black\"}\n              fontSize={0.1}\n              outlineWidth={0.015}\n              outlineColor={\"white\"}\n              font=\"./Rubik-Medium.ttf\"\n              toneMapped={false}\n            >\n              {obj.name.toUpperCase()}\n            </Text>\n            <Sphere\n              key={obj.name + \"indicator\"}\n              position={[obj.position.x, obj.position.y + 0.06, obj.position.z]}\n              args={[0.035, 16, 16]}\n            >\n              <meshBasicMaterial\n                color={obj.status === \"open\" ? \"green\" : \"red\"}\n              />\n            </Sphere>\n          </>\n        ))}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function ResortInfo({ resortData }) {\n  if (!resortData) {\n    return <p>Loading resort data...</p>;\n  }\n\n  return (\n    <div>\n      <h1>{resortData.resort.name}</h1>\n      <div>\n        <img src=\"top.png\" alt=\"Top\" style={{ width: \"25px\" }} />\n        <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n          {resortData.top.elevation}\n        </span>\n        <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n          {resortData.top.snowDepth}\n        </span>\n        <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n          {resortData.top.temperature} °C\n        </span>\n      </div>\n      <div>\n      <img src=\"bottom.png\" alt=\"Resort\" style={{ width: \"25px\" }} />\n        <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n          {resortData.bottom.elevation}\n        </span>\n        <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n          {resortData.bottom.snowDepth}\n        </span>\n        <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n          {resortData.bottom.temperature} °C\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function HourlyForecast({ hourlyData }) {\n  if (!hourlyData) {\n    return <p>Loading hourly forecast...</p>;\n  }\n\n  return (\n    <div\n    style={{\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    }}>\n      {hourlyData.map((hour, index) => (\n        <div key={index}>\n          <h2>{hour.time}</h2>\n          <p>{hour.description}</p>\n          <p>{hour.windSpeed} km/h</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function LiftStatus({ liftStatusData }) {\n  if (!liftStatusData) {\n    return <p>Loading lift status...</p>;\n  }\n\n  return (\n    <div>\n      <img src=\"./lifts.png\" alt=\"Lifts\" width=\"25px\" />\n      <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n        <span style={{ color: \"green\" }}>&bull;</span> {liftStatusData.open}\n      </span>\n      <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n        <span style={{ color: \"red\" }}>&bull;</span> {liftStatusData.closed}\n      </span>\n      <span style={{ padding: \"0 0.5rem 0 0.5rem\" }}>\n        <span style={{ color: \"grey\" }}>&bull;</span> {liftStatusData.ooo}\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ToggleButtons({\n  toggleState,\n  toggleRuns,\n  toggleSatellite,\n  toggleResortLabels,\n  toggleLiftLabels,\n}) {\n  return (\n    <div>\n      <h1>Toggle Buttons</h1>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <button\n          style={{\n            all: \"unset\",\n            border: \"solid 1px white\",\n            padding: \"2px\",\n            borderRadius: \"5px\",\n          }}\n          onClick={toggleRuns}\n        >\n          <img src=\"./run.png\" alt=\"Runs\" style={{ width: \"25px\" }} />\n        </button>\n        {toggleState.runs ? \"Hide\" : \"Show\"}\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <button\n          style={{\n            all: \"unset\",\n            border: \"solid 1px white\",\n            padding: \"2px\",\n            borderRadius: \"5px\",\n          }}\n          onClick={toggleSatellite}\n        >\n          <img\n            src=\"./satellite.png\"\n            alt=\"Satellite\"\n            style={{ width: \"25px\" }}\n          />\n        </button>\n        {toggleState.satellite ? \"Hide\" : \"Show\"}\n      </div>\n      <button\n        style={{\n          all: \"unset\",\n          border: \"solid 1px white\",\n          padding: \"2px\",\n          borderRadius: \"5px\",\n        }}\n        onClick={toggleLiftLabels}\n      >\n        <img src=\"./lifts.png\" alt=\"Lifts\" style={{ width: \"25px\" }} />\n      </button>\n    </div>\n  );\n}\n","const { format, utcToZonedTime } = require(\"date-fns-tz\");\n\nexport default function getLiftStatuses() {\n  // Get the current time in the Europe/Paris timezone\n  const now = new Date();\n  const timezone = \"Europe/Paris\";\n  const zonedTime = utcToZonedTime(now, timezone);\n  const timeString = format(zonedTime, \"HH:mm\");\n\n  // Define the ski lifts and their open/closed/ooo status\n  const skiLifts = [\n    {\n      name: \"Vanoise Express\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Télémetro\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Grande Rochette\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Télébus\",\n      status: timeString >= \"08:00\" && timeString < \"18:00\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Lac Noir\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Télébuffette\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Montalbert\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Champagny\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Bellecôte\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Coches\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Roche de Mio\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Belle Plagne\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Les Colosses\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Arpette\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"La Lovatière\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Inversens\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Crozats\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Les Envers\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Bécoin\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Verdons Sud\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Bergerie\",\n      status: \"ooo\",\n    },\n    {\n      name: \"Plan Bois\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"La Roche\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Bijolin\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Carella\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Blanchets\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Borseliers\",\n      status: \"ooo\",\n    },\n    {\n      name: \"La Rossa\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Colorado\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Pierres Blanches\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Les Quillis\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Montchavin\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Les Bauches\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Traversée\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Mélèzes\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Glacier\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"1800\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Boulevard\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Dos Rond\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Adrets\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Golf\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Chalet de Bellecôte\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Dou du Praz\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Ecole Plagne-Montalbert\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Gentil\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Aime-La Plagne\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Stade\",\n      status: timeString >= \"09:00\" && timeString < \"16:00\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Eterlou\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Grenouilles\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Petit Sauget\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Praconduit\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Tyrolien\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Grangette\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Borseliers 3\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Plan Leschaux\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Col de Forcle\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Chevrette\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Biquet\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Aollets\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Crêtes\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"France\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Dromadaires\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Aiglon\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Patinoire\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Plateau Carella\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Replat\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Sucette\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Solu\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Ange\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Belle Plagne\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Indiens\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Ourson\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n    {\n      name: \"Petits Loups\",\n      status: timeString >= \"08:30\" && timeString < \"16:30\" ? \"open\" : \"closed\",\n    },\n  ];\n\n  // Calculate the total number of lifts that are open, closed, or ooo\n  let openCount = 0;\n  let closedCount = 0;\n  let oooCount = 0;\n\n  for (const lift of skiLifts) {\n    if (lift.status === \"open\") {\n      openCount++;\n    } else if (lift.status === \"closed\") {\n      closedCount++;\n    } else {\n      oooCount++;\n    }\n  }\n\n  const statusSummary = {\n    open: openCount,\n    closed: closedCount,\n    ooo: oooCount,\n  };\n\n  return { skiLifts, statusSummary };\n}\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { MapControls, Stars, Environment, Html } from \"@react-three/drei\";\n\nimport Model from \"./components/Model\";\nimport ResortInfo from \"./components/ResortInfo\";\nimport HourlyForecast from \"./components/HourlyForecast\";\nimport LiftStatus from \"./components/LiftStatus\";\nimport ToggleButtons from \"./components/ToggleButtons\";\n\nimport liftData from \"./liftData\";\n\nfunction App() {\n  const [resortData, setResortData] = useState({\n    resort: {\n      name: null,\n      country: null,\n      freshSnowfall: null,\n      lastSnowfallDate: null,\n    },\n    top: { snowDepth: 0, temperature: 0, elevation: 0 },\n    bottom: { snowDepth: 0, temperature: 0, elevation: 0 },\n  });\n  const [hourlyData, setHourlyData] = useState([\n    {\n      time: \"10:00\",\n      description: \"Sunny\",\n      windSpeed: 5,\n    },\n    {\n      time: \"11:00\",\n      description: \"Partly Cloudy\",\n      windSpeed: 7,\n    },\n    // Add more objects as needed\n  ]);\n  const [liftStatusData, setLiftStatusData] = useState({\n    open: liftData().statusSummary.open,\n    closed: liftData().statusSummary.closed,\n    ooo: liftData().statusSummary.ooo,\n  });\n  const [toggleState, setToggleState] = useState({\n    runs: true,\n    satellite: true,\n    resortLabels: true,\n    liftLabels: true,\n  });\n\n  const toggleRuns = () => {\n    setToggleState((prevState) => ({ ...prevState, runs: !prevState.runs }));\n  };\n\n  const toggleSatellite = () => {\n    setToggleState((prevState) => ({\n      ...prevState,\n      satellite: !prevState.satellite,\n    }));\n  };\n\n  const toggleResortLabels = () => {\n    setToggleState((prevState) => ({\n      ...prevState,\n      resortLabels: !prevState.resortLabels,\n    }));\n  };\n\n  const toggleLiftLabels = () => {\n    setToggleState((prevState) => ({\n      ...prevState,\n      liftLabels: !prevState.liftLabels,\n    }));\n  };\n\n  // API calls\n\n  useEffect(() => {\n    // Resort and snow conditions\n    const fetchResortData = async () => {\n      const url =\n        \"https://ski-resort-forecast.p.rapidapi.com/La%20Plagne/snowConditions?units=m\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\":\n            \"625e8c3452mshb467e7695aba98fp1d8b3ajsnb88b69f5e950\",\n          \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\",\n        },\n      };\n\n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n\n        const resortData = {\n          resort: {\n            name: result.basicInfo.name,\n            country: result.basicInfo.region,\n            freshSnowfall: result.freshSnowfall,\n            lastSnowfallDate: result.lastSnowfallDate,\n          },\n          top: {\n            snowDepth: result.topSnowDepth,\n            elevation: result.basicInfo.topLiftElevation,\n          },\n          bottom: {\n            snowDepth: result.botSnowDepth,\n            elevation: result.basicInfo.botLiftElevation,\n          },\n        };\n\n        setResortData(resortData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const fetchHourlyData = async () => {\n      const url =\n        \"https://ski-resort-forecast.p.rapidapi.com/La%20Plagne/hourly?units=m&c=true\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\":\n            \"625e8c3452mshb467e7695aba98fp1d8b3ajsnb88b69f5e950\",\n          \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\",\n        },\n      };\n\n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        console.log(result);\n\n        // setResortData((prevState) => ({\n        //   ...prevState,\n        //   top: {\n        //     ...prevState.top,\n        //     temperature: result.topLift[0].maxTemp,\n        //   },\n        //   bottom: {\n        //     ...prevState.bottom,\n        //     temperature: result.botLift[0].maxTemp,\n        //   },\n        // }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // fetchResortData();\n    // fetchHourlyData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"App\">\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: \"2\",\n            color: \"white\",\n            right: 0,\n            height: \"100%\",\n            padding: \"1rem\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            fontFamily: \"Rubik\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <ResortInfo resortData={resortData} />\n          <HourlyForecast hourlyData={hourlyData} />\n          <LiftStatus liftStatusData={liftStatusData} />\n          <ToggleButtons\n            toggleState={toggleState}\n            toggleRuns={toggleRuns}\n            toggleSatellite={toggleSatellite}\n            toggleResortLabels={toggleResortLabels}\n            toggleLiftLabels={toggleLiftLabels}\n          />\n        </div>\n        <Canvas\n          style={{ position: \"absolute\", top: 0, left: 0 }}\n          camera={{ position: [0, 20, -10] }}\n          gl={{ antialias: true, toneMappingExposure: 1 }}\n          shadows\n        >\n          <fogExp2 attach=\"fog\" args={[\"#ffffff\", 0.02]} />\n          <Environment\n            files={\n              \"https://dl.polyhaven.org/file/ph-assets/HDRIs/hdr/2k/syferfontein_18d_clear_puresky_2k.hdr\"\n            }\n            background\n          />\n\n          <MapControls\n            enableDamping\n            enableZoom={true}\n            enableRotate={true}\n            maxPolarAngle={Math.PI / 4} // limits the angle of rotation\n            minPolarAngle={0} // limits the angle of rotation\n            minDistance={4} // minimum distance to the target\n            maxDistance={30} // maximum distance to the target\n          />\n          <Suspense\n            fallback={\n              <Html>\n                <img\n                  src=\"./icon.png\"\n                  style={{\n                    position: \"fixed\",\n                    width: \"50px\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    animation: \"loading 2s ease-in-out infinite\",\n                  }}\n                />\n              </Html>\n            }\n          >\n            <Model toggleState={toggleState} liftData={liftData} />\n          </Suspense>\n          <Stars />\n        </Canvas>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}